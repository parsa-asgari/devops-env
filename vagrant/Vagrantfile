Vagrant.configure("2") do |config|

  # What it does:
  config.ssh.forward_agent = true

  # A list of VMs and their details.
  servers=[
      {
        :hostname => "devopsenv-ansible",
        :box => "bento/ubuntu-22.04", # the vagrant box's name
        :version => "202407.23.0", # the vagrant box's version
        :ip => "192.168.56.4", # the vagrant ip, for later local network service discovery
        :ssh_port => '2210' # for ssh port forwarding on the host
      },
      {
        :hostname => "devopsenv-controlplane-1",
        :box => "bento/ubuntu-22.04",
        :version => "202407.23.0",
        :ip => "192.168.56.5",
        :ssh_port => '2211'
      },
      {
        :hostname => "devopsenv-node-1",
        :box => "bento/ubuntu-22.04",
        :version => "202407.23.0",
        :ip => "192.168.56.6",
        :ssh_port => '2212'
      },
      {
        :hostname => "devopsenv-node-2",
        :box => "bento/ubuntu-22.04",
        :version => "202407.23.0",
        :ip => "192.168.56.7",
        :ssh_port => '2213'
      }
    ]

  # A loop to iteratively create and provision machines
  servers.each do |machine|
      config.vm.define machine[:hostname] do |node|
          node.vm.box = machine[:box]
          node.vm.hostname = machine[:hostname]
          node.vm.network :private_network, ip: machine[:ip]
          node.vm.network "forwarded_port", guest: 22, host: machine[:ssh_port], id: "ssh"
          node.vm.provider :virtualbox do |vb|
            if node.vm.hostname.include?('controlplane')
              vb.customize ["modifyvm", :id, "--memory", 3000]
              vb.customize ["modifyvm", :id, "--cpus", 2]
            elsif node.vm.hostname.include?('node')
              vb.customize ["modifyvm", :id, "--memory", 4000]
              vb.customize ["modifyvm", :id, "--cpus", 4]
            elsif node.vm.hostname.include?('ansible')
              vb.customize ["modifyvm", :id, "--memory", 768]
              vb.customize ["modifyvm", :id, "--cpus", 2]
            end
          end

          # provision the ansible machine
          if node.vm.hostname.include?('ansible')
            node.vm.provision "shell", inline: <<-SHELL
            sudo apt-get update
            sudo apt-get install -y git
            [ -d devops-env ] && echo "skipping git clone. folder exists👍"  || git clone https://github.com/parsa-asgari/devops-env.git
            sudo apt-get install -y python3 python3-pip
            python3 -m pip install --upgrade pip
            pip install ansible
            SHELL
          end
          
      end
  end
end